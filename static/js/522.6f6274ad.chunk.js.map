{"version":3,"file":"static/js/522.6f6274ad.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.styled.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { Form, Field} from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  width: 350px;\n  height: 200px;\n  padding: 10px 8px;\n\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  &:not(:last-of-type) {\n    margin-bottom: 18px;\n  }\n`;\n\nexport const LabelValue = styled.span`\n  display: block;\n  margin-bottom: 10px;\n\n  font-size: 20px;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  border: 1px solid black;\n  box-shadow: 0px 0px 0px 0px rgba(171, 209, 255, 0.75);\n\n  transition: border 50ms linear, box-shadow 50ms linear;\n\n  &:focus {\n    outline: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    box-shadow: 0px 0px 4px 4px rgba(171, 209, 255, 0.75);\n  }\n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  bottom: 10px;\n  left: 8px;\n  display: block;\n  cursor: pointer;\n\n  background: transparent;\n  font-size: 14px;\n  font-weight: 600;\n  border: 1px solid #cacaca;\n  border-radius: 4px;\n\n  &:active {\n    background: #3f78e2;\n  }\n`;","import { Formik } from 'formik';\nimport {\n  Btn,\n  Input,\n  Label,\n  LabelValue,\n  StyledForm,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={(values, actions) => {\n        if (!values.name || !values.number) {\n          alert('Please enter a name and number.');\n          return;\n        }\n\n        const doesContactExist = contacts.some(\n          ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n        );\n\n        if (doesContactExist) {\n          alert(`${values.name} is already in contacts.`);\n          actions.resetForm();\n          return;\n        }\n\n        dispatch(addContact(values));\n\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <Label>\n          <LabelValue>Name</LabelValue>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n\n        <Label>\n          <LabelValue>Number</LabelValue>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <Btn type=\"submit\">Add contact</Btn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 22px;\n  text-align: center;\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 25%;\n    left: -10%;\n    display: block;\n    width: 8px;\n    height: 8px;\n    background-color: #000000;\n    border-radius: 50%;\n  }\n`;\n\nexport const Text = styled.p`\n  display: block;\n  font-size: 20px;\n  margin: 0 auto 0 0;\n`;\n\nexport const Btn = styled.button`\n  background: transparent;\n  font-size: 14px;\n  font-weight: 600;\n  border: 1px solid #cacaca;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:active {\n    background: #3f78e2;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { Item, Text, Btn } from './ContactItem.styled';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item id={id}>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Btn\n        type=\"button\"\n        name=\"delete\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </Btn>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n`;","import { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      {visibleContacts && visibleContacts.length > 0 && (\n        <List>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  margin-bottom: 20px;\n  border: 1px solid black;\n  box-shadow: 0px 0px 0px 0px rgba(171, 209, 255, 0.75);\n\n  transition: border 50ms linear, box-shadow 50ms linear;\n\n  &:focus {\n    outline: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n    box-shadow: 0px 0px 4px 4px rgba(171, 209, 255, 0.75);\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { Input } from './Filter.styled';\nimport { setFilter } from 'redux/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <h3>Find contact by name</h3>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={evt => {\n          dispatch(setFilter(evt.target.value));\n        }}\n      />\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nexport const Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n      }}\n    >\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Phonebook />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","LabelValue","_templateObject3","Input","Field","_templateObject4","Btn","_templateObject5","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","number","onSubmit","values","actions","some","_ref","alert","concat","resetForm","addContact","children","_jsxs","type","title","required","Item","Text","ContactItem","id","onClick","deleteContact","List","ContactList","visibleContacts","_Fragment","length","map","Filter","onChange","evt","setFilter","target","value","Phonebook","useEffect","fetchContacts","style","display","justifyContent","alignItems","fontSize","color","Contacts","Helmet"],"sourceRoot":""}